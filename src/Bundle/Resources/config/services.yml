services:
  netzmacht.contao_workflow.user:
    class: Netzmacht\Workflow\Security\User

  netzmacht.contao_workflow.type_provider:
    class: Netzmacht\Contao\Workflow\Type\WorkflowTypeProvider
    arguments:
      - []

  netzmacht.contao_workflow.type.default:
    class: Netzmacht\Contao\Workflow\Type\DefaultWorkflowType
    tags:
      - { name: 'netzmacht.contao_workflow.type' }

  netzmacht.contao_workflow.action_factory:
    class: Netzmacht\Contao\Workflow\Action\ActionFactory
    arguments:
      - []

  netzmacht.contao_workflow.action_factory.property:
    class: Netzmacht\Contao\Workflow\Action\Property\PropertyActionFactory
    tags:
      - { name: 'netzmacht.contao_workflow.action' }

  netzmacht.contao_workflow.definition.workflow_loader:
    class:

  netzmacht.contao_workflow.entity_factory:
    class: Netzmacht\Contao\Workflow\Entity\DelegatingEntityFactory
    arguments:
      - []

  netzmacht.contao_workflow.entity_factory.contao_model:
    class: Netzmacht\Contao\Workflow\Entity\ContaoModelEntityFactory
    tags:
      - { name: 'netzmacht.contao_workflow.entity_factory' }

  netzmacht.contao_workflow.entity_manager:
    class: Netzmacht\Contao\Workflow\Entity\EntityManager
    arguments:
      - '@netzmacht.contao_toolkit.repository_manager'
      - '@netzmacht.contao_toolkit.contao.model_adapter'

  netzmacht.contao_workflow.transition_handler_factory:
    class: Netzmacht\Workflow\Handler\RepositoryBasedTransitionHandlerFactory
      - '@netzmacht.contao_workflow.entity_manager'
      - '@netzmacht.contao_workflow.entity_manager'

  netzmacht.contao_workflow.state_repository:
    class: Netzmacht\Contao\Workflow\Model\State\StateRepository
    arguments:
      - '@netzmacht.contao_toolkit.repository_manager'

  netzmacht.contao_workflow.manager:
    class: Netzmacht\Contao\Workflow\Manager\ContaoWorkflowManager
    arguments:
      - '@netzmacht.contao_workflow.transition_handler_factory'
      - '@netzmacht.contao_workflow.state_repository'
      - '@netzmacht.contao_workflow.entity_factory'
      - []

  netzmacht.contao_workflow.manager.lazy:
    class: Netzmacht\Contao\Workflow\Manager\LazyLoadingWorkflowManager
    decorates: 'netzmacht.contao_workflow.manager'
    arguments:
      - '@netzmacht.contao_workflow.manager.lazy.inner'
      - '@netzmacht.contao_workflow.definition.workflow_loader'
